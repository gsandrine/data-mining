cuisines <- read.csv("chefmozcuisine.csv")
places <- read.csv("geoplaces2,csv")
cuisines <- read.csv("chefmozcuisine.csv")
cuisines <- read.csv("../chefmozcuisine.csv")
cuisines <- read.csv("../chefmozcuisine.csv")
places <- read.csv("../geoplaces2.csv")
places <- read.csv("..\geoplaces2.csv")
cuisines <- read.csv("data/chefmozcuisine.csv")
places <- read.csv("data/geoplaces2.csv")
cuisines <- read.csv("data/chefmozcuisine.csv")
places <- read.csv("data/geoplaces2.csv")
ratings <- read.csv("data/rating_final.csv")
View(cuisines)
ans1.a = table(cuisines$Rcuisine)
ans1.a
pie(ans1.a, main="Cuisines Distribution")
cuisines.per.place = merge(cuisines, places, by="placeID")
cuisines.per.place
ans1.a = ans1.a[ans1.a > 5]
pie(ans1.a, main="Cuisines Distribution")
ans1.a = table(cuisines.per.place$Rcuisine)
ans1.a = ans1.a[ans1.a > 5]
pie(ans1.a, main="Cuisines Distribution")
# b
ans1.b = table(cuisines.per.place$placeID)
ans1.b
# b
ans1.b = table(cuisines.per.place$placeID)
hist(ans1.b,
xlab="Cuisines Count",
ylab="Frequency",
main="Cuisines Count Frequency based on Restaurant")
hist(ans1.b,
xlab="Cuisines Count",
ylab="Frequency",
main="Cuisines Count Frequency based on Restaurant",
col="lightblue")
ratings.per.place = merge(ratings, places,  by="placeID")
filt.ratings = cuisines.per.place
ratings.per.place = merge(ratings, places,  by="placeID")
filt.ratings = rating.per.place
filt.ratings = ratings.per.place
ratings.per.place = merge(ratings, places,  by="placeID")
filt.ratings = ratings.per.place
filt.ratings = filt.ratings[filt.ratings$avg_rating > 1.2, ]
table (filt.ratings$state)
filt.ratings = ratings.per.place
filt.ratings$avg_rating =
(filt.ratings$rating
+ filt.ratings$food_rating
+ filt.ratings$service_rating) / 3
filt.ratings = filt.ratings[filt.ratings$avg_rating > 1.2, ]
filt.ratings$state = tolowed(filt.ratings$state)
filt.ratings$state = tolower(filt.ratings$state)
table(filt.ratings$state)
#ifelse
filt.ratings$state = ifelse(
#logic
filt.ratings$state == "s.l.p."
| filt.ratings$state == "san luis potos"
| filt.ratings $state == "san luis potosi",
#if true
"slp",
#else
filt.ratings$state
)
table(filt.ratings$state)
barplot(ans1.c)
ans1.c = table(filt.ratings$avg_rating, filt.ratings$state)
barplot(ans1.c, beside=TRUE)
barplot(ans1.c, beside=TRUE, col=c("red", "blue", "pink"))
ans1.c = table(filt.ratings$avg_rating, filt.ratings$state)
rownames(ans1.c)
colnames(ans1.c)
colors =c("red", "blue", "pink")
barplot(ans1.c, beside=TRUE, col=colors, main="Title")
legend("top", rownames(ans1.c), fill=colors(), cex = 0.5)
legend("top", rownames(ans1.c), fill=colors(), cex = 0.5)
barplot(ans1.c, beside=TRUE, col=colors, main="Title")
legend("top", rownames(ans1.c), fill=colors(), cex = 0.5)
filt.cuisines = cuisines.per.place
table(fit.cuisines$Rcuisnes)
table(filt.cuisines$Rcuisnes)
filt.cuisines = cuisines.per.place
table(filt.cuisines$Rcuisine)
filt.cuisines = cuisines.per.place
filt.cuisines = filt.cuisines[filt.cuisines$franchise == "f", ]
filt.cuisines = filt.cuisines[filt.cuisines$other_services =="none", ]
filt.cuisines = filt.cuisines[filt.cuisines$country != "?", ]
filt.cuisines$Rcuisine = gsub("_", " ", filt.cuisines$Rcuisine)
transformed.cuisines = split(filt.cuisines$placeID, filt.cuisines$Rcuisine)
transformed.cuisines
transformed.cuisines = split(filt.cuisines$Rcuisine
, filt.cuisines$placeID)
transformed.cuisines
library(arules)
install.packages("arules")
library(arules)
library(arules)
freq = apriori(transformed.cuisines, parameter=list(supp=0.008))
inspect(freq)
freq = apriori(transformed.cuisines, parameter=list(supp=0.008, target="frequent itemsets"))
inspect(freq)
rules = ruleInduction(freq, confidence = 0.8)
inspect(rules)
